from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '69189d83f8cb'
down_revision = '2a473f8c74dc'
branch_labels = None
depends_on = None


def upgrade():
    # Check if the 'company_postal_code' table exists before attempting to drop it
    if op.get_bind().dialect.has_table(op.get_bind(), 'company_postal_code'):
        op.drop_table('company_postal_code')

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('company', schema=None) as batch_op:
        if 'name' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.alter_column('name',
                existing_type=mysql.VARCHAR(length=255),
                type_=sa.String(length=128),
                existing_nullable=False)
        
        if 'category' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('category')
        if 'max_width' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('max_width')
        if 'max_weight' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('max_weight')
        if 'max_volumetric_weight' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('max_volumetric_weight')
        if 'max_length' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('max_length')
        if 'max_height' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'company')]:
            batch_op.drop_column('max_height')

    with op.batch_alter_table('offer', schema=None) as batch_op:
        if 'offer_type' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'offer')]:
            batch_op.alter_column('offer_type',
                existing_type=mysql.ENUM('weight', 'volume'),
                type_=sa.String(length=50),
                existing_nullable=False)

    with op.batch_alter_table('postal_code', schema=None) as batch_op:
        if 'area_name' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'postal_code')]:
            batch_op.alter_column('area_name',
                existing_type=mysql.VARCHAR(length=255),
                type_=sa.String(length=128),
                existing_nullable=False)
        if 'prefecture' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'postal_code')]:
            batch_op.alter_column('prefecture',
                existing_type=mysql.VARCHAR(length=255),
                type_=sa.String(length=128),
                existing_nullable=False)
        if 'postal_code' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'postal_code')]:
            batch_op.create_unique_constraint(None, ['postal_code'])
        if 'city' in [col['name'] for col in op.get_bind().engine.dialect.get_columns(op.get_bind(), 'postal_code')]:
            batch_op.drop_column('city')
    # ### end Alembic commands ###


def downgrade():
    op.create_table(
        'company_postal_code',
        sa.Column('id', sa.Integer(), nullable=False, autoincrement=True, primary_key=True),
        sa.Column('company_id', sa.Integer(), nullable=False),
        sa.Column('postal_code_id', sa.Integer(), nullable=False),
        sa.Column('status', mysql.ENUM('accessible', 'hard_to_reach', 'not_serviced'), nullable=False),
        sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
        sa.ForeignKeyConstraint(['postal_code_id'], ['postal_code.id'], )
    )

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('postal_code', schema=None) as batch_op:
        batch_op.add_column(sa.Column('city', mysql.VARCHAR(length=255), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('prefecture',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('area_name',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('offer', schema=None) as batch_op:
        batch_op.alter_column('offer_type',
               existing_type=sa.String(length=50),
               type_=mysql.ENUM('weight', 'volume'),
               existing_nullable=False)

    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.add_column(sa.Column('max_height', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('max_length', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('max_volumetric_weight', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('max_weight', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('max_width', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('category', mysql.ENUM('courier', 'transport'), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
    # ### end Alembic commands ###
